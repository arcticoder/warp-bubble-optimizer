{"event":"Draft mission requirements spec (geometry, sensors, safety)","status":"completed","refs":["docs/requirements.md","docs/roadmap.ndjson:Mission Definition and Constraints"]}
{"event":"Populate risk register for soliton and EM-plasma control","status":"completed","refs":["docs/risk_register.md","docs/roadmap.ndjson:Mission Definition and Constraints"]}
{"event":"Power budget numeric reconciliation","status":"completed","refs":["docs/power_budget_reconciliation.md","docs/roadmap.ndjson:Mission Definition and Constraints","docs/roadmap.ndjson:Power Budget and Temporal Smearing Decision"]}
{"event":"Ensured CMA-ES availability; added cma to test requirements","status":"completed","refs":["requirements-test.txt","test_ultimate_bspline.py"]}
{"event":"Fixed 'No module named ultimate_bspline_optimizer' via top-level shim and JAX branch-free objective; ultimate optimizer script runs","status":"completed","refs":["ultimate_bspline_optimizer.py","src/optimization/ultimate_bspline_optimizer.py","test_ultimate_bspline.py"]}
{"event":"Reviewed mission goal and constraints for Warp 1 lunar round-trip prototype","status":"completed","refs":["docs/roadmap.ndjson:Mission Definition and Constraints"]}
{"event":"Analyzed temporal smearing trade-offs (30 s vs 120 s vs 300 s); decided to keep 30 s per phase","status":"completed","refs":["docs/roadmap.ndjson:Power Budget and Temporal Smearing Decision"]}
{"event":"Created roadmap milestones for field synthesis, rings/coils/lasers integration, battery and control","status":"completed","refs":["docs/roadmap.ndjson"]}
{"event":"Selected first implementation task: implement and test compute_smearing_energy analytic model","status":"completed","refs":["docs/roadmap.ndjson:1. Power Budget Model"]}
{"event":"Added power model module src/supraluminal_prototype/power.py with compute_smearing_energy and unit tests","status":"completed","refs":["tests/test_power_profile.py","docs/roadmap.ndjson:1. Power Budget Model"]}
{"event":"Power model tests passed (3/3); recorded decision to retain 30 s smearing","status":"completed","refs":["tests/test_power_profile.py","docs/roadmap.ndjson:Power Budget and Temporal Smearing Decision"]}
{"event":"Created field synthesis/control/hardware stubs and tests (zero-expansion, ring sync, coil driver)","status":"completed","refs":["src/supraluminal_prototype/warp_generator.py","src/supraluminal_prototype/control.py","src/supraluminal_prototype/hardware.py","tests/test_field_and_control.py","docs/roadmap.ndjson:2. Field Synthesis"]}
{"event":"Implemented plasma_density and field_synthesis with unit tests (5/5 passing)","status":"completed","refs":["src/supraluminal_prototype/warp_generator.py","tests/test_field_and_control.py","docs/roadmap.ndjson:2. Field Synthesis"]}
{"event":"Fixed test import dependencies for legacy tests by installing matplotlib and scipy in project venv; triaged test_3d_stability.py (no tests discovered)","status":"completed","refs":["docs/progress_log.md:test-history","test_3d_stability.py"]}
{"event":"Added envelope fit utilities (target_soliton_envelope, compute_envelope_error, tune_ring_amplitudes_uniform) with tests","status":"completed","refs":["src/supraluminal_prototype/warp_generator.py","tests/test_field_and_control.py","docs/roadmap.ndjson:2. Field Synthesis - status"]}
{"event":"Coupled envelope to shift via curl(e*A) and added optimize_energy stub; tests passing (9/9)","status":"completed","refs":["src/supraluminal_prototype/warp_generator.py","tests/test_field_and_control.py","docs/roadmap.ndjson:2. Field Synthesis - next"]}
{"event":" Fix accelerated Gaussian test import by providing shim module gaussian_optimize.py","status":"completed","refs":["gaussian_optimize.py","test_accelerated_gaussian.py"]}
{"event":" Integrate discharge efficiency vs C-rate into optimize_energy and add tests","status":"completed","refs":["src/supraluminal_prototype/warp_generator.py","tests/test_field_and_control.py"]}
{"event":"Add power model test for shape='triangle' equivalence","status":"completed","refs":["tests/test_power_profile.py"]}
{"event":"Wired tiny UQ PNG into mission-validate with signature check","status":"completed","refs":[".github/workflows/mission-validate.yml","bin/plot_uq_tiny.py","tools/png_check.py"]}
{"event":"Added step-response quick smoke test and phase sync schedule stub","status":"completed","refs":["src/supraluminal_prototype/control_phase.py","tests/test_step_response_quick.py"]}
{"event":"Tightened varied profile UQ gates to energy_cv<0.05 and feasible_fraction>=0.90","status":"completed","refs":[".github/feasibility_gates.json",".github/workflows/mission-validate.yml"]}
{"event":"Documented --timeline-log and timeline CSV/JSONL fields","status":"completed","refs":["README.md","docs/mission_timeline_log.md"]}
{"event":"Add requirements.txt to pin test dependencies (numpy, scipy, matplotlib, pytest)","status":"completed","refs":["requirements-test.txt","docs/roadmap.ndjson:4. Test and Environment Hygiene - updates"]}
{"event":"Add UQ test for zero-expansion tolerance vs grid resolution (8/16/32)","status":"completed","refs":["tests/test_field_and_control.py::test_zero_expansion_tolerance_vs_resolution"]}
{"event":"Implemented gaussian_optimize shim; accelerated Gaussian tests run and pass","status":"completed","refs":["gaussian_optimize.py","test_accelerated_gaussian.py"]}
{"event":"Added triangle shape equivalence test for power model","status":"completed","refs":["tests/test_power_profile.py"]}
{"event":"Integrated discharge efficiency vs C-rate proxy into optimize_energy; added feasibility tests","status":"completed","refs":["src/supraluminal_prototype/warp_generator.py","tests/test_field_and_control.py"]}
{"event":"Added zero-expansion tolerance vs resolution UQ test","status":"completed","refs":["tests/test_field_and_control.py"]}
{"event":"Pinned test dependencies in requirements-test.txt","status":"completed","refs":["requirements-test.txt","docs/roadmap.ndjson:4. Test and Environment Hygiene - status"]}
{"event":"Fixed test_backreaction_timeout import chain: added JAX/SymPy/SciPy guards and made package __init__ lazy; test runs and completes under minimal deps","status":"completed","refs":["src/warp_engine/backreaction.py","src/warp_engine/dynamic_sim.py","src/warp_engine/__init__.py","test_backreaction_timeout.py","docs/progress_log.md:test-history"]}
{"event":"Made vector velocity profile JAX-safe with branch-free scalar profile; fixed energy integration and colormap access","status":"completed","refs":["simulate_vector_impulse.py"]}
{"event":"Migrated resolved UQ tasks to UQ-TODO-RESOLVED.ndjson","status":"completed","refs":["docs/UQ-TODO-RESOLVED.ndjson"]}
{"event":"Migrated resolved V&V tasks to VnV-TODO-RESOLVED.ndjson","status":"completed","refs":["docs/VnV-TODO-RESOLVED.ndjson"]}
{"event":"Added at least 5 new progress items and stabilized pytest config for async and site-packages filtering","status":"completed","refs":["pytest.ini","conftest.py"]}
{"event":"Add CI job to run tests with venv pinning and site-packages exclusion","status":"completed","refs":[".github/workflows/ci.yml","requirements-test.txt","pytest.ini","conftest.py"]}
{"event":"Document pytest collection filters and focused runs in README","status":"completed","refs":["README.md","pytest.ini","conftest.py"]}
{"event":"Add V&V test for vector impulse energy scaling vs v_max","status":"completed","refs":["tests/test_vnv_vector_impulse.py","simulate_vector_impulse.py"]}
{"event":"Add trajectory accuracy vs n_steps regression (coarseâ†’fine)","status":"completed","refs":["tests/test_vnv_vector_impulse.py","integrated_impulse_control.py"]}
{"event":"Add JAX vs NumPy benchmark summary to docs using jax_acceleration test","status":"completed","refs":["test_jax_acceleration.py","docs/technical-documentation.md"]}
{"event":"CI workflow added to run tests on GitHub Actions","status":"completed","refs":[".github/workflows/ci.yml","requirements-test.txt"]}
{"event":"README updated with pytest filters and focused run guidance","status":"completed","refs":["README.md","pytest.ini","conftest.py"]}
{"event":"Added V&V tests: vector energy ~ v_max^2 and trajectory accuracy improves with n_steps","status":"completed","refs":["tests/test_vnv_vector_impulse.py","simulate_vector_impulse.py"]}
{"event":"Laser coherence injection-locking plan draft","status":"completed","refs":["docs/roadmap.ndjson:Rings, Coils, Lasers, Plasma Integration","docs/technical-documentation.md:Coherence Control Plan (draft)"]}
{"event":"CI hygiene: tests-only discovery and optional JAX demo skip","status":"completed","refs":["pytest.ini:testpaths","tests/test_jax_acceleration.py"]}
{"event":"Ring CAD parameter file initial draft","status":"completed","refs":["docs/roadmap.ndjson:Rings, Coils, Lasers, Plasma Integration","docs/technical-documentation.md:Ring CAD parameters (draft)"]}
{"event":"Refresh roadmap files and add roadmap_next_20.ndjson","status":"completed","refs":["docs/roadmap_next_20.ndjson","docs/roadmap.ndjson:Next 20 Tasks (2025-08-15)"]}
{"event":"Mission timeline v0.1 (events, durations, gates)","status":"completed","refs":["docs/mission_timeline.md","docs/roadmap_next_20.ndjson:task=2"]}
{"event":"Power electronics block diagram outline","status":"completed","refs":["docs/power_electronics.md","docs/roadmap_next_20.ndjson:task=3"]}
{"event":"Safety checklist v0.9 (abort/quench/thermal)","status":"completed","refs":["docs/safety_checklist.md","docs/roadmap_next_20.ndjson:task=4"]}
{"event":"Ring CAD parameter YAML skeleton","status":"completed","refs":["docs/ring_params.yaml","docs/roadmap_next_20.ndjson:task=5"]}
{"event":"Laser coherence injection-locking plan v0.1","status":"completed","refs":["docs/laser_coherence_plan.md","docs/roadmap_next_20.ndjson:task=6"]}
{"event":"Battery sizing table draft","status":"completed","refs":["docs/battery_sizing.md","docs/roadmap_next_20.ndjson:task=7"]}
{"event":"Control state estimator outline","status":"completed","refs":["docs/control_state_estimator.md","docs/roadmap_next_20.ndjson:task=8"]}
{"event":"Autopilot abort criteria v0.1","status":"completed","refs":["docs/autopilot_abort_criteria.md","docs/roadmap_next_20.ndjson:task=9"]}
{"event":"HIL dry-run plan v0.1","status":"completed","refs":["docs/hil_dry_run_plan.md","docs/roadmap_next_20.ndjson:task=10"]}
{"event":"Mission rehearsal timeline v0.1","status":"completed","refs":["docs/mission_rehearsal_timeline.md","docs/roadmap_next_20.ndjson:task=11"]}
{"event":"UQ & V&V coverage matrix skeleton","status":"completed","refs":["docs/coverage_matrix.md","docs/roadmap_next_20.ndjson:task=12"]}
{"event":"Traceability matrix skeleton","status":"completed","refs":["docs/traceability_matrix.md","docs/roadmap_next_20.ndjson:task=13"]}
{"event":"GitHub Pages broken-link check checklist","status":"completed","refs":["docs/pages_link_checklist.md","docs/roadmap_next_20.ndjson:task=14"]}
{"event":"Zenodo publishing guide","status":"completed","refs":["docs/zenodo_publishing_guide.md","docs/roadmap_next_20.ndjson:task=15"]}
{"event":"Standard distance profile sample CSV","status":"completed","refs":["data/dist_profile_standard.csv","docs/roadmap_next_20.ndjson:task=16"]}
{"event":"Impulse validation checklist","status":"completed","refs":["docs/impulse_validation_checklist.md","docs/roadmap_next_20.ndjson:task=17"]}
{"event":"Control phase sync jitter budget","status":"completed","refs":["docs/phase_sync_jitter_budget.md","docs/roadmap_next_20.ndjson:task=18"]}
{"event":"Thermal budget outline","status":"completed","refs":["docs/thermal_budget.md","docs/roadmap_next_20.ndjson:task=19"]}
{"event":"Requirements traceability overview","status":"completed","refs":["docs/requirements_traceability_overview.md","docs/roadmap_next_20.ndjson:task=20"]}
{"event":"Mission CLI rehearsal mode added","status":"completed","refs":["src/impulse/mission_cli.py"],"snippets":{"python":"import subprocess,sys,os; wp='{"+"\"waypoints\": [{\"x\":0,\"y\":0,\"z\":0},{\"x\":1,\"y\":0,\"z\":0}],\"dwell\":0.1}"+"}'\n# see tests/test_supraluminal_prototype_new.py for call pattern"}}
{"event":"UQ helpers for metamaterial & laser coherence","status":"completed","refs":["src/uq_validation/metamaterial_uq.py","src/uq_validation/laser_coherence_uq.py"],"snippets":{"python":"from src.uq_validation.metamaterial_uq import run_metamaterial_uq\nprint(run_metamaterial_uq(n=64))"}}