{"category":"Migration","system":"warp-bubble-optimizer","task":"Inventory all soliton-related modules and scripts","owner":"core","status":"todo","links":["docs/SOLITON_PROJECT_FINAL_REPORT.md","docs/roadmap.ndjson"],"python_snippet":"# enumerate src and scripts for soliton-related files\nimport os, json\npaths=[]\nfor root,_,files in os.walk('src'):\n    for f in files:\n        if 'warp' in f or 'soliton' in f or 'generator' in f:\n            paths.append(os.path.join(root,f))\nprint(json.dumps(paths[:10]))"}
{"category":"Migration","system":"warp-bubble-optimizer","task":"Define target package layout under src/supraluminal_prototype and src/warp_qft","owner":"core","status":"in_progress","links":["docs/architecture.tex"],"python_snippet":"# assert packages import paths exist after migration\nimport importlib\nfor m in ['supraluminal_prototype.warp_generator','warp_qft.negative_energy']:\n    importlib.import_module(m)"}
{"category":"Migration","system":"warp-bubble-optimizer","task":"Create deprecation shims for moved soliton scripts","owner":"core","status":"todo","links":["docs/DEPRECATIONS.md"],"python_snippet":"# placeholder: import old path and ensure it forwards to new implementation"}
{"category":"Migration","system":"warp-bubble-qft","task":"Align negative energy calculators with new interfaces","owner":"qft","status":"todo","links":["../warp-bubble-qft/requirements.txt"],"python_snippet":"# smoke: compute_negative_energy_region returns dict with keys\nfrom warp_qft.negative_energy import compute_negative_energy_region as CNER\nres=CNER(8,0.1); assert isinstance(res,dict) and 'total_negative_energy' in res"}
{"category":"Migration","system":"warp-bubble-shape-catalog","task":"Ensure profile export scripts reference new field synthesis API","owner":"catalog","status":"todo","links":["../warp-bubble-shape-catalog/scripts/export_profiles_csv.py"],"python_snippet":"# placeholder: from supraluminal_prototype.warp_generator import field_synthesis"}
{"category":"Migration","system":"warp-bubble-mvp-simulator","task":"Wire simulator to migrated WarpFieldGenerator and control hooks","owner":"sim","status":"todo","links":["../warp-bubble-mvp-simulator/docs/technical-documentation.md"],"python_snippet":"# placeholder: import WarpFieldGenerator from optimizer repo via workspace paths"}
{"category":"Migration","system":"warp-bubble-parameter-constraints","task":"Update LaTeX citations and symbols to match new module names","owner":"constraints","status":"todo","links":["../warp-bubble-parameter-constraints/parameter_constraints.tex"],"python_snippet":"# optional check: grep for old names and count occurrences"}
{"category":"Migration","system":"negative-energy-generator","task":"Cross-validate QFT negative energy with optimizer envelope outputs","owner":"qft","status":"todo","links":["../negative-energy-generator/complete_theoretical_integration.py"],"python_snippet":"# placeholder: pass envelope into QFT sampler and compare sign/region"}
{"category":"CI/CD","system":"warp-bubble-optimizer","task":"Add migration-aware CI: import shims, run smoke tests, link-check docs","owner":"ci","status":"in_progress","links":[".github/workflows/pages-link-check.yml"],"python_snippet":"# placeholder: pytest -q subset focusing on migrated modules"}
{"category":"Docs","system":"warp-bubble-optimizer","task":"Document migration plan and redirects for GitHub Pages","owner":"docs","status":"todo","links":["docs/DEPRECATIONS.md","docs/pages_link_checklist.md"],"python_snippet":"# no-op"}
{"category":"Traceability","system":"warp-bubble-optimizer","task":"Map roadmap tasks to migrated tests and UQ entries","owner":"qa","status":"todo","links":["docs/roadmap.ndjson","docs/progress_log.ndjson"],"python_snippet":"# ensure every roadmap associated_task has a corresponding V&V or UQ entry"}
{"category":"Release","system":"warp-bubble-optimizer","task":"Prepare release notes for migration (v0.9) and deprecations window","owner":"release","status":"todo","links":["CHANGELOG.md"],"python_snippet":"# update CHANGELOG.md with migration summary"}
{"category":"Safety","system":"warp-bubble-optimizer","task":"Re-run safety and abort checks on migrated control paths","owner":"safety","status":"todo","links":["docs/safety_checklist.md","docs/autopilot_abort_criteria.md"],"python_snippet":"# run quick safety assertions on abort thresholds"}
{"category":"Validation","system":"warp-bubble-optimizer","task":"Reproduce key soliton figures post-migration and compare within 5%","owner":"vnv","status":"todo","links":["docs/SOLITON_PROJECT_FINAL_REPORT.md"],"python_snippet":"# compare reproduction JSON vs. report numbers within Â±5%"}
{"category":"Ownership","system":"workspace","task":"Assign codeowners for migrated areas and update CODEOWNERS","owner":"ops","status":"todo","links":[".github/CODEOWNERS"],"python_snippet":"# ensure CODEOWNERS contains supraluminal_prototype/ and warp_qft/ entries"}
{"category":"Dependencies","system":"warp-bubble-optimizer","task":"Pin and verify dependencies (PyYAML, numpy, scipy) for migrated modules","owner":"ops","status":"in_progress","links":["requirements.txt"],"python_snippet":"# import yaml and key libs\nimport yaml, numpy, scipy"}
{"category":"Testing","system":"warp-bubble-optimizer","task":"Add fast smoke tests for migrated modules and shims","owner":"qa","status":"todo","links":["tests/"],"python_snippet":"# pytest -k 'warp_generator or params_loader or negative_energy' -q"}
{"category":"UQ","system":"warp-bubble-optimizer","task":"Re-run UQ jobs for metamaterial and laser coherence with migrated hooks","owner":"uq","status":"todo","links":["src/uq_validation/"],"python_snippet":"from src.uq_validation.laser_coherence_uq import run_laser_coherence_uq as run; res=run(n=16); assert 'cv' in res"}
{"category":"Backout Plan","system":"workspace","task":"Define backout strategy if migration breaks critical paths","owner":"ops","status":"todo","links":["docs/DEPRECATIONS.md"],"python_snippet":"# document and tag pre-migration commit; provide rollback instructions"}
